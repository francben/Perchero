@model Perchero.Models.Prenda
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Prendas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="contentpanel">

        <ol class="breadcrumb breadcrumb-quirk">
            <li>
                <a href="@Url.Action("Index","Home")"><i class="fa fa-home mr5"></i>Crear Prenda</a>
            </li>
            <li><a href="@Url.Action("Index","Prendas")">Prenda</a></li>
            <li class="active">Crear Prenda</li>
        </ol>

        <div class="panel">
            <div class="panel-heading">
                <h4 class="panel-title">
                    Crear Prenda
                </h4>
            </div>
            <div class="panel-body form-horizontal">
                <div class="form-group hidden">
                    <div class="col-md-2">
                        @Html.HiddenFor(model => model.UserId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoId, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownList("TipoId", null, htmlAttributes: new { @class = "form-control", @placeholder = "Buscar", @disabled = "true" })
                        @Html.DropDownList("TipoId", null, htmlAttributes: new { @class = "form-control hidden", @placeholder = "Buscar" })
                        @Html.ValidationMessageFor(model => model.TipoId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "", @type = "file" } })
                        @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Talle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Talle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Talle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Vitrina, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Vitrina)
                            @Html.ValidationMessageFor(model => model.Vitrina, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrecioTotal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.PrecioTotal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrecioTotal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Tela</th>
                            <th>Metro</th>
                            <th>Avio</th>
                            <th>Cantidad</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.DetallePrendas)
                        {
                            <tr>
                                <td>@item.Tela.Nombre @Html.HiddenFor(model => item.TelaId)</td>
                                <td>@item.MetroTela @Html.HiddenFor(model => item.MetroTela)</td>
                                <td>@item.Avio.Nombre @Html.HiddenFor(model => item.AvioId)</td>
                                <td>@item.CantidadAvio @Html.HiddenFor(model => item.CantidadAvio)</td>
                            </tr>
                        }
                    </tbody>
                </table>
                
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>


            </div>
        </div>
    </div>
}

@Html.ActionLink("Back to List", "Index")


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery.addfield.js"></script>
    <script>
        $(function () {
            var sheepItForm = $('#sheepItForm').sheepIt({
                separator: '',
                allowRemoveLast: true,
                allowRemoveCurrent: true,
                allowRemoveAll: true,
                allowAdd: true,
                allowAddN: true,
                maxFormsCount: 10,
                minFormsCount: 0,
                iniFormsCount: 1
            });

            cargar_tipo();
            function cargar_tipo() {
                var codigoTipoPrenda = {
                    url: "/Tipos/getTipoPrendas",
                    getValue: "Categoria",
                    list: {
                        match: {
                            enabled: true
                        },
                        maxNumberOfElements: 8,
                        sort: {
                            enabled: true
                        },
                        onSelectItemEvent: function () {
                            var TipoId = $(".Tipo_Nombre").getSelectedItemData().Id;
                            $("#TipoId").val(TipoId).trigger("change");
                            var Precio = $(".Tipo_Nombre").getSelectedItemData().Precio;
                            $("#PrecioTotal").val(Precio);
                        },
                    },
                    theme: "plate-dark"
                    //theme: "square"
                    //theme: "round"
                };
                $("input.Tipo_Nombre").easyAutocomplete(codigoTipoPrenda);
                $(".easy-autocomplete-container").addClass("text-danger");

            };



            var precioTotal = 0;
            var telas = 0;
            var canttela = [];
            var cantidadtela = [];
            var lisTelas = [];
            var cnt = 1;
            var cd = 0;
            @*suma();
            function suma() {
                var pprenda = @Html.Raw(Json.Encode(Model.Precio));
                for (var i = 0; i < cnt; i++) {
                    canttela[i] = $("#sheepItForm_" + i + "_tela").val();
                    console.log();
                    temp = canttela[i];
                    cantidadtela[i] = parseInt(temp);
                    console.log(cantidadtela);
                }
                //cargar_tela();
                setTimeout(suma, 50);
            }*@

            $("#agt").click(function () {
                cnt += 1;
                cd += 1;
            });
            $("#sheepItForm_remove_current").click(function () {
                cnt -= 1;
                cd -= 1;
            });

            //cargar_tela();

            function cargar_tela() {
                //console.log(cd);
                var codigoTela = {
                    url: "/Telas/getTelas",
                    getValue: "Nombre",
                    list: {
                        match: {
                            enabled: true
                        },
                        maxNumberOfElements: 8,
                        sort: {
                            enabled: true
                        },
                        onSelectItemEvent: function () {
                            console.log(cd);
                            //for (var i = 0; i < cnt; i++) {
                            var TelaId = $(".sheepItForm_" + cd + "_tela").getSelectedItemData().Id;
                            console.log(TelaId);
                            $("#TelaId").val(TelaId).trigger("change");
                            var precio = $(".sheepItForm_" + cd + "_tela").getSelectedItemData().Precio;
                            console.log(precio);
                            //}
                        },
                    },
                    theme: "plate-dark"
                    //theme: "square"
                    //theme: "round"
                };
                $("#sheepItForm_" + cd + "_tela").easyAutocomplete(codigoTela);
                $(".easy-autocomplete-container").addClass("text-danger");
                //setTimeout(cargar_tela, 50);
            };


        });
    </script>
}
