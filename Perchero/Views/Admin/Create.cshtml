@model Perchero.Models.ExpandedUserDTO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="contentpanel">

        <ol class="breadcrumb breadcrumb-quirk">
            <li>
                <a href="@Url.Action("Index","Home")"><i class="fa fa-home mr5"></i>Inicio</a>
            </li>
            <li><a href="@Url.Action("Index","Admin")">Usuario</a></li>
            <li class="active">Crear Usuario</li>
        </ol>

        <div class="panel">
            <div class="panel-heading">
                <h4 class="panel-title">
                    Crear Usuario
                </h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>
            <div class="panel-body form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "", @type = "file" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Empresa, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Empresa, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-1" })
                    <div class="col-md-11">
                        @Html.DropDownList("Roles",null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success btn-quirk btn-stroke btn-xs"><i class="glyphicon glyphicon-floppy-disk"></i>Guardar
                        </button>
                        <a class="btn btn-default btn-quirk btn-stroke btn-xs" href="@Url.Action("Index","Admin")"><i class="glyphicon glyphicon-arrow-left"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}